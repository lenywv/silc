Terminals unused in grammar

   END


Grammar

    0 $accept: program $end

    1 program: declarations functiondefs mainfunction

    2 declarations: DECL declist ENDDECL

    3 declist: declist declaration ';'
    4        | declaration ';'

    5 declaration: vartype varlist
    6            | vartype IDENT '(' arglist ')'

    7 vartype: INTEGER
    8        | BOOLEAN

    9 varlist: varlist ',' variable
   10        | variable

   11 variable: IDENT
   12         | IDENT '[' CONSTANT ']'

   13 functiondefs: functiondefs function
   14             | %empty

   15 function: functionheader '{' Ldeclarations statementlist returnstmt '}'

   16 functionheader: vartype IDENT '(' arglist ')'

   17 returnstmt: RETURN expr ';'

   18 mainfunction: INTEGER MAIN '(' ')' '{' Ldeclarations statementlist '}'

   19 arglist: arglist ',' arg
   20        | arg

   21 arg: vartype IDENT
   22    | vartype '&' IDENT

   23 Ldeclarations: DECL Ldecllist ENDDECL
   24              | %empty

   25 Ldecllist: Ldecllist Ldeclaration ';'
   26          | Ldeclaration ';'

   27 Ldeclaration: vartype Lvarlist

   28 Lvarlist: Lvarlist ',' Lvariable
   29         | Lvariable

   30 Lvariable: IDENT

   31 statement: IDENT '=' expr
   32          | IDENT '[' expr ']' '=' expr
   33          | WRITE '(' expr ')'
   34          | IF '(' condition ')' statementlist ENDIF
   35          | IF '(' condition ')' statementlist ELSE statementlist ENDIF
   36          | WHILE '(' condition ')' DO statementlist ENDWHILE

   37 statementlist: statement ';'
   38              | statementlist statement ';'

   39 condition: expr

   40 expr: CONSTANT
   41     | IDENT
   42     | '&' IDENT
   43     | IDENT '(' actualarglist ')'
   44     | IDENT '[' expr ']'
   45     | READ '(' ')'
   46     | expr '+' expr
   47     | expr '-' expr
   48     | expr '*' expr
   49     | expr '/' expr
   50     | expr '%' expr
   51     | '(' expr ')'
   52     | '-' expr
   53     | TRUE
   54     | FALSE
   55     | expr RELOP expr
   56     | expr LOGOP expr

   57 actualarglist: %empty
   58              | nonemptyactualarglist

   59 nonemptyactualarglist: nonemptyactualarglist ',' actualarg
   60                      | actualarg

   61 actualarg: expr


Terminals, with rules where they appear

$end (0) 0
'%' (37) 50
'&' (38) 22 42
'(' (40) 6 16 18 33 34 35 36 43 45 51
')' (41) 6 16 18 33 34 35 36 43 45 51
'*' (42) 48
'+' (43) 46
',' (44) 9 19 28 59
'-' (45) 47 52
'/' (47) 49
';' (59) 3 4 17 25 26 37 38
'=' (61) 31 32
'[' (91) 12 32 44
']' (93) 12 32 44
'{' (123) 15 18
'}' (125) 15 18
error (256)
CONSTANT (258) 12 40
IDENT (259) 6 11 12 16 21 22 30 31 32 41 42 43 44
END (260)
MAIN (261) 18
INTEGER (262) 7 18
BOOLEAN (263) 8
DECL (264) 2 23
ENDDECL (265) 2 23
RETURN (266) 17
IF (267) 34 35
ELSE (268) 35
WHILE (269) 36
READ (270) 45
ENDIF (271) 34 35
WRITE (272) 33
TRUE (273) 53
FALSE (274) 54
DO (275) 36
ENDWHILE (276) 36
LOGOP (277) 56
RELOP (278) 55
UMINUS (279)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
declarations (42)
    on left: 2, on right: 1
declist (43)
    on left: 3 4, on right: 2 3
declaration (44)
    on left: 5 6, on right: 3 4
vartype (45)
    on left: 7 8, on right: 5 6 16 21 22 27
varlist (46)
    on left: 9 10, on right: 5 9
variable (47)
    on left: 11 12, on right: 9 10
functiondefs (48)
    on left: 13 14, on right: 1 13
function (49)
    on left: 15, on right: 13
functionheader (50)
    on left: 16, on right: 15
returnstmt (51)
    on left: 17, on right: 15
mainfunction (52)
    on left: 18, on right: 1
arglist (53)
    on left: 19 20, on right: 6 16 19
arg (54)
    on left: 21 22, on right: 19 20
Ldeclarations (55)
    on left: 23 24, on right: 15 18
Ldecllist (56)
    on left: 25 26, on right: 23 25
Ldeclaration (57)
    on left: 27, on right: 25 26
Lvarlist (58)
    on left: 28 29, on right: 27 28
Lvariable (59)
    on left: 30, on right: 28 29
statement (60)
    on left: 31 32 33 34 35 36, on right: 37 38
statementlist (61)
    on left: 37 38, on right: 15 18 34 35 36 38
condition (62)
    on left: 39, on right: 34 35 36
expr (63)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56, on right:
    17 31 32 33 39 44 46 47 48 49 50 51 52 55 56 61
actualarglist (64)
    on left: 57 58, on right: 43
nonemptyactualarglist (65)
    on left: 59 60, on right: 58 59
actualarg (66)
    on left: 61, on right: 59 60


State 0

    0 $accept: . program $end

    DECL  shift, and go to state 1

    program       go to state 2
    declarations  go to state 3


State 1

    2 declarations: DECL . declist ENDDECL

    INTEGER  shift, and go to state 4
    BOOLEAN  shift, and go to state 5

    declist      go to state 6
    declaration  go to state 7
    vartype      go to state 8


State 2

    0 $accept: program . $end

    $end  shift, and go to state 9


State 3

    1 program: declarations . functiondefs mainfunction

    $default  reduce using rule 14 (functiondefs)

    functiondefs  go to state 10


State 4

    7 vartype: INTEGER .

    $default  reduce using rule 7 (vartype)


State 5

    8 vartype: BOOLEAN .

    $default  reduce using rule 8 (vartype)


State 6

    2 declarations: DECL declist . ENDDECL
    3 declist: declist . declaration ';'

    INTEGER  shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    ENDDECL  shift, and go to state 11

    declaration  go to state 12
    vartype      go to state 8


State 7

    4 declist: declaration . ';'

    ';'  shift, and go to state 13


State 8

    5 declaration: vartype . varlist
    6            | vartype . IDENT '(' arglist ')'

    IDENT  shift, and go to state 14

    varlist   go to state 15
    variable  go to state 16


State 9

    0 $accept: program $end .

    $default  accept


State 10

    1 program: declarations functiondefs . mainfunction
   13 functiondefs: functiondefs . function

    INTEGER  shift, and go to state 17
    BOOLEAN  shift, and go to state 5

    vartype         go to state 18
    function        go to state 19
    functionheader  go to state 20
    mainfunction    go to state 21


State 11

    2 declarations: DECL declist ENDDECL .

    $default  reduce using rule 2 (declarations)


State 12

    3 declist: declist declaration . ';'

    ';'  shift, and go to state 22


State 13

    4 declist: declaration ';' .

    $default  reduce using rule 4 (declist)


State 14

    6 declaration: vartype IDENT . '(' arglist ')'
   11 variable: IDENT .
   12         | IDENT . '[' CONSTANT ']'

    '('  shift, and go to state 23
    '['  shift, and go to state 24

    $default  reduce using rule 11 (variable)


State 15

    5 declaration: vartype varlist .
    9 varlist: varlist . ',' variable

    ','  shift, and go to state 25

    $default  reduce using rule 5 (declaration)


State 16

   10 varlist: variable .

    $default  reduce using rule 10 (varlist)


State 17

    7 vartype: INTEGER .
   18 mainfunction: INTEGER . MAIN '(' ')' '{' Ldeclarations statementlist '}'

    MAIN  shift, and go to state 26

    $default  reduce using rule 7 (vartype)


State 18

   16 functionheader: vartype . IDENT '(' arglist ')'

    IDENT  shift, and go to state 27


State 19

   13 functiondefs: functiondefs function .

    $default  reduce using rule 13 (functiondefs)


State 20

   15 function: functionheader . '{' Ldeclarations statementlist returnstmt '}'

    '{'  shift, and go to state 28


State 21

    1 program: declarations functiondefs mainfunction .

    $default  reduce using rule 1 (program)


State 22

    3 declist: declist declaration ';' .

    $default  reduce using rule 3 (declist)


State 23

    6 declaration: vartype IDENT '(' . arglist ')'

    INTEGER  shift, and go to state 4
    BOOLEAN  shift, and go to state 5

    vartype  go to state 29
    arglist  go to state 30
    arg      go to state 31


State 24

   12 variable: IDENT '[' . CONSTANT ']'

    CONSTANT  shift, and go to state 32


State 25

    9 varlist: varlist ',' . variable

    IDENT  shift, and go to state 33

    variable  go to state 34


State 26

   18 mainfunction: INTEGER MAIN . '(' ')' '{' Ldeclarations statementlist '}'

    '('  shift, and go to state 35


State 27

   16 functionheader: vartype IDENT . '(' arglist ')'

    '('  shift, and go to state 36


State 28

   15 function: functionheader '{' . Ldeclarations statementlist returnstmt '}'

    DECL  shift, and go to state 37

    $default  reduce using rule 24 (Ldeclarations)

    Ldeclarations  go to state 38


State 29

   21 arg: vartype . IDENT
   22    | vartype . '&' IDENT

    IDENT  shift, and go to state 39
    '&'    shift, and go to state 40


State 30

    6 declaration: vartype IDENT '(' arglist . ')'
   19 arglist: arglist . ',' arg

    ')'  shift, and go to state 41
    ','  shift, and go to state 42


State 31

   20 arglist: arg .

    $default  reduce using rule 20 (arglist)


State 32

   12 variable: IDENT '[' CONSTANT . ']'

    ']'  shift, and go to state 43


State 33

   11 variable: IDENT .
   12         | IDENT . '[' CONSTANT ']'

    '['  shift, and go to state 24

    $default  reduce using rule 11 (variable)


State 34

    9 varlist: varlist ',' variable .

    $default  reduce using rule 9 (varlist)


State 35

   18 mainfunction: INTEGER MAIN '(' . ')' '{' Ldeclarations statementlist '}'

    ')'  shift, and go to state 44


State 36

   16 functionheader: vartype IDENT '(' . arglist ')'

    INTEGER  shift, and go to state 4
    BOOLEAN  shift, and go to state 5

    vartype  go to state 29
    arglist  go to state 45
    arg      go to state 31


State 37

   23 Ldeclarations: DECL . Ldecllist ENDDECL

    INTEGER  shift, and go to state 4
    BOOLEAN  shift, and go to state 5

    vartype       go to state 46
    Ldecllist     go to state 47
    Ldeclaration  go to state 48


State 38

   15 function: functionheader '{' Ldeclarations . statementlist returnstmt '}'

    IDENT  shift, and go to state 49
    IF     shift, and go to state 50
    WHILE  shift, and go to state 51
    WRITE  shift, and go to state 52

    statement      go to state 53
    statementlist  go to state 54


State 39

   21 arg: vartype IDENT .

    $default  reduce using rule 21 (arg)


State 40

   22 arg: vartype '&' . IDENT

    IDENT  shift, and go to state 55


State 41

    6 declaration: vartype IDENT '(' arglist ')' .

    $default  reduce using rule 6 (declaration)


State 42

   19 arglist: arglist ',' . arg

    INTEGER  shift, and go to state 4
    BOOLEAN  shift, and go to state 5

    vartype  go to state 29
    arg      go to state 56


State 43

   12 variable: IDENT '[' CONSTANT ']' .

    $default  reduce using rule 12 (variable)


State 44

   18 mainfunction: INTEGER MAIN '(' ')' . '{' Ldeclarations statementlist '}'

    '{'  shift, and go to state 57


State 45

   16 functionheader: vartype IDENT '(' arglist . ')'
   19 arglist: arglist . ',' arg

    ')'  shift, and go to state 58
    ','  shift, and go to state 42


State 46

   27 Ldeclaration: vartype . Lvarlist

    IDENT  shift, and go to state 59

    Lvarlist   go to state 60
    Lvariable  go to state 61


State 47

   23 Ldeclarations: DECL Ldecllist . ENDDECL
   25 Ldecllist: Ldecllist . Ldeclaration ';'

    INTEGER  shift, and go to state 4
    BOOLEAN  shift, and go to state 5
    ENDDECL  shift, and go to state 62

    vartype       go to state 46
    Ldeclaration  go to state 63


State 48

   26 Ldecllist: Ldeclaration . ';'

    ';'  shift, and go to state 64


State 49

   31 statement: IDENT . '=' expr
   32          | IDENT . '[' expr ']' '=' expr

    '['  shift, and go to state 65
    '='  shift, and go to state 66


State 50

   34 statement: IF . '(' condition ')' statementlist ENDIF
   35          | IF . '(' condition ')' statementlist ELSE statementlist ENDIF

    '('  shift, and go to state 67


State 51

   36 statement: WHILE . '(' condition ')' DO statementlist ENDWHILE

    '('  shift, and go to state 68


State 52

   33 statement: WRITE . '(' expr ')'

    '('  shift, and go to state 69


State 53

   37 statementlist: statement . ';'

    ';'  shift, and go to state 70


State 54

   15 function: functionheader '{' Ldeclarations statementlist . returnstmt '}'
   38 statementlist: statementlist . statement ';'

    IDENT   shift, and go to state 49
    RETURN  shift, and go to state 71
    IF      shift, and go to state 50
    WHILE   shift, and go to state 51
    WRITE   shift, and go to state 52

    returnstmt  go to state 72
    statement   go to state 73


State 55

   22 arg: vartype '&' IDENT .

    $default  reduce using rule 22 (arg)


State 56

   19 arglist: arglist ',' arg .

    $default  reduce using rule 19 (arglist)


State 57

   18 mainfunction: INTEGER MAIN '(' ')' '{' . Ldeclarations statementlist '}'

    DECL  shift, and go to state 37

    $default  reduce using rule 24 (Ldeclarations)

    Ldeclarations  go to state 74


State 58

   16 functionheader: vartype IDENT '(' arglist ')' .

    $default  reduce using rule 16 (functionheader)


State 59

   30 Lvariable: IDENT .

    $default  reduce using rule 30 (Lvariable)


State 60

   27 Ldeclaration: vartype Lvarlist .
   28 Lvarlist: Lvarlist . ',' Lvariable

    ','  shift, and go to state 75

    $default  reduce using rule 27 (Ldeclaration)


State 61

   29 Lvarlist: Lvariable .

    $default  reduce using rule 29 (Lvarlist)


State 62

   23 Ldeclarations: DECL Ldecllist ENDDECL .

    $default  reduce using rule 23 (Ldeclarations)


State 63

   25 Ldecllist: Ldecllist Ldeclaration . ';'

    ';'  shift, and go to state 76


State 64

   26 Ldecllist: Ldeclaration ';' .

    $default  reduce using rule 26 (Ldecllist)


State 65

   32 statement: IDENT '[' . expr ']' '=' expr

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    expr  go to state 85


State 66

   31 statement: IDENT '=' . expr

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    expr  go to state 86


State 67

   34 statement: IF '(' . condition ')' statementlist ENDIF
   35          | IF '(' . condition ')' statementlist ELSE statementlist ENDIF

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    condition  go to state 87
    expr       go to state 88


State 68

   36 statement: WHILE '(' . condition ')' DO statementlist ENDWHILE

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    condition  go to state 89
    expr       go to state 88


State 69

   33 statement: WRITE '(' . expr ')'

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    expr  go to state 90


State 70

   37 statementlist: statement ';' .

    $default  reduce using rule 37 (statementlist)


State 71

   17 returnstmt: RETURN . expr ';'

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    expr  go to state 91


State 72

   15 function: functionheader '{' Ldeclarations statementlist returnstmt . '}'

    '}'  shift, and go to state 92


State 73

   38 statementlist: statementlist statement . ';'

    ';'  shift, and go to state 93


State 74

   18 mainfunction: INTEGER MAIN '(' ')' '{' Ldeclarations . statementlist '}'

    IDENT  shift, and go to state 49
    IF     shift, and go to state 50
    WHILE  shift, and go to state 51
    WRITE  shift, and go to state 52

    statement      go to state 53
    statementlist  go to state 94


State 75

   28 Lvarlist: Lvarlist ',' . Lvariable

    IDENT  shift, and go to state 59

    Lvariable  go to state 95


State 76

   25 Ldecllist: Ldecllist Ldeclaration ';' .

    $default  reduce using rule 25 (Ldecllist)


State 77

   40 expr: CONSTANT .

    $default  reduce using rule 40 (expr)


State 78

   41 expr: IDENT .
   43     | IDENT . '(' actualarglist ')'
   44     | IDENT . '[' expr ']'

    '('  shift, and go to state 96
    '['  shift, and go to state 97

    $default  reduce using rule 41 (expr)


State 79

   45 expr: READ . '(' ')'

    '('  shift, and go to state 98


State 80

   53 expr: TRUE .

    $default  reduce using rule 53 (expr)


State 81

   54 expr: FALSE .

    $default  reduce using rule 54 (expr)


State 82

   52 expr: '-' . expr

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    expr  go to state 99


State 83

   51 expr: '(' . expr ')'

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    expr  go to state 100


State 84

   42 expr: '&' . IDENT

    IDENT  shift, and go to state 101


State 85

   32 statement: IDENT '[' expr . ']' '=' expr
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    LOGOP  shift, and go to state 102
    RELOP  shift, and go to state 103
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '%'    shift, and go to state 106
    '*'    shift, and go to state 107
    '/'    shift, and go to state 108
    ']'    shift, and go to state 109


State 86

   31 statement: IDENT '=' expr .
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    LOGOP  shift, and go to state 102
    RELOP  shift, and go to state 103
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '%'    shift, and go to state 106
    '*'    shift, and go to state 107
    '/'    shift, and go to state 108

    $default  reduce using rule 31 (statement)


State 87

   34 statement: IF '(' condition . ')' statementlist ENDIF
   35          | IF '(' condition . ')' statementlist ELSE statementlist ENDIF

    ')'  shift, and go to state 110


State 88

   39 condition: expr .
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    LOGOP  shift, and go to state 102
    RELOP  shift, and go to state 103
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '%'    shift, and go to state 106
    '*'    shift, and go to state 107
    '/'    shift, and go to state 108

    $default  reduce using rule 39 (condition)


State 89

   36 statement: WHILE '(' condition . ')' DO statementlist ENDWHILE

    ')'  shift, and go to state 111


State 90

   33 statement: WRITE '(' expr . ')'
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    LOGOP  shift, and go to state 102
    RELOP  shift, and go to state 103
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '%'    shift, and go to state 106
    '*'    shift, and go to state 107
    '/'    shift, and go to state 108
    ')'    shift, and go to state 112


State 91

   17 returnstmt: RETURN expr . ';'
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    LOGOP  shift, and go to state 102
    RELOP  shift, and go to state 103
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '%'    shift, and go to state 106
    '*'    shift, and go to state 107
    '/'    shift, and go to state 108
    ';'    shift, and go to state 113


State 92

   15 function: functionheader '{' Ldeclarations statementlist returnstmt '}' .

    $default  reduce using rule 15 (function)


State 93

   38 statementlist: statementlist statement ';' .

    $default  reduce using rule 38 (statementlist)


State 94

   18 mainfunction: INTEGER MAIN '(' ')' '{' Ldeclarations statementlist . '}'
   38 statementlist: statementlist . statement ';'

    IDENT  shift, and go to state 49
    IF     shift, and go to state 50
    WHILE  shift, and go to state 51
    WRITE  shift, and go to state 52
    '}'    shift, and go to state 114

    statement  go to state 73


State 95

   28 Lvarlist: Lvarlist ',' Lvariable .

    $default  reduce using rule 28 (Lvarlist)


State 96

   43 expr: IDENT '(' . actualarglist ')'

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    $default  reduce using rule 57 (actualarglist)

    expr                   go to state 115
    actualarglist          go to state 116
    nonemptyactualarglist  go to state 117
    actualarg              go to state 118


State 97

   44 expr: IDENT '[' . expr ']'

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    expr  go to state 119


State 98

   45 expr: READ '(' . ')'

    ')'  shift, and go to state 120


State 99

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   52     | '-' expr .
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    $default  reduce using rule 52 (expr)


State 100

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | '(' expr . ')'
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    LOGOP  shift, and go to state 102
    RELOP  shift, and go to state 103
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '%'    shift, and go to state 106
    '*'    shift, and go to state 107
    '/'    shift, and go to state 108
    ')'    shift, and go to state 121


State 101

   42 expr: '&' IDENT .

    $default  reduce using rule 42 (expr)


State 102

   56 expr: expr LOGOP . expr

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    expr  go to state 122


State 103

   55 expr: expr RELOP . expr

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    expr  go to state 123


State 104

   46 expr: expr '+' . expr

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    expr  go to state 124


State 105

   47 expr: expr '-' . expr

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    expr  go to state 125


State 106

   50 expr: expr '%' . expr

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    expr  go to state 126


State 107

   48 expr: expr '*' . expr

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    expr  go to state 127


State 108

   49 expr: expr '/' . expr

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    expr  go to state 128


State 109

   32 statement: IDENT '[' expr ']' . '=' expr

    '='  shift, and go to state 129


State 110

   34 statement: IF '(' condition ')' . statementlist ENDIF
   35          | IF '(' condition ')' . statementlist ELSE statementlist ENDIF

    IDENT  shift, and go to state 49
    IF     shift, and go to state 50
    WHILE  shift, and go to state 51
    WRITE  shift, and go to state 52

    statement      go to state 53
    statementlist  go to state 130


State 111

   36 statement: WHILE '(' condition ')' . DO statementlist ENDWHILE

    DO  shift, and go to state 131


State 112

   33 statement: WRITE '(' expr ')' .

    $default  reduce using rule 33 (statement)


State 113

   17 returnstmt: RETURN expr ';' .

    $default  reduce using rule 17 (returnstmt)


State 114

   18 mainfunction: INTEGER MAIN '(' ')' '{' Ldeclarations statementlist '}' .

    $default  reduce using rule 18 (mainfunction)


State 115

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr
   61 actualarg: expr .

    LOGOP  shift, and go to state 102
    RELOP  shift, and go to state 103
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '%'    shift, and go to state 106
    '*'    shift, and go to state 107
    '/'    shift, and go to state 108

    $default  reduce using rule 61 (actualarg)


State 116

   43 expr: IDENT '(' actualarglist . ')'

    ')'  shift, and go to state 132


State 117

   58 actualarglist: nonemptyactualarglist .
   59 nonemptyactualarglist: nonemptyactualarglist . ',' actualarg

    ','  shift, and go to state 133

    $default  reduce using rule 58 (actualarglist)


State 118

   60 nonemptyactualarglist: actualarg .

    $default  reduce using rule 60 (nonemptyactualarglist)


State 119

   44 expr: IDENT '[' expr . ']'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    LOGOP  shift, and go to state 102
    RELOP  shift, and go to state 103
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '%'    shift, and go to state 106
    '*'    shift, and go to state 107
    '/'    shift, and go to state 108
    ']'    shift, and go to state 134


State 120

   45 expr: READ '(' ')' .

    $default  reduce using rule 45 (expr)


State 121

   51 expr: '(' expr ')' .

    $default  reduce using rule 51 (expr)


State 122

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr
   56     | expr LOGOP expr .

    RELOP  shift, and go to state 103
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '%'    shift, and go to state 106
    '*'    shift, and go to state 107
    '/'    shift, and go to state 108

    $default  reduce using rule 56 (expr)


State 123

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   55     | expr RELOP expr .
   56     | expr . LOGOP expr

    '+'  shift, and go to state 104
    '-'  shift, and go to state 105
    '%'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 55 (expr)


State 124

   46 expr: expr . '+' expr
   46     | expr '+' expr .
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    '%'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 46 (expr)


State 125

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   47     | expr '-' expr .
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    '%'  shift, and go to state 106
    '*'  shift, and go to state 107
    '/'  shift, and go to state 108

    $default  reduce using rule 47 (expr)


State 126

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   50     | expr '%' expr .
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    $default  reduce using rule 50 (expr)


State 127

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   48     | expr '*' expr .
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    $default  reduce using rule 48 (expr)


State 128

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   49     | expr '/' expr .
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    $default  reduce using rule 49 (expr)


State 129

   32 statement: IDENT '[' expr ']' '=' . expr

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    expr  go to state 135


State 130

   34 statement: IF '(' condition ')' statementlist . ENDIF
   35          | IF '(' condition ')' statementlist . ELSE statementlist ENDIF
   38 statementlist: statementlist . statement ';'

    IDENT  shift, and go to state 49
    IF     shift, and go to state 50
    ELSE   shift, and go to state 136
    WHILE  shift, and go to state 51
    ENDIF  shift, and go to state 137
    WRITE  shift, and go to state 52

    statement  go to state 73


State 131

   36 statement: WHILE '(' condition ')' DO . statementlist ENDWHILE

    IDENT  shift, and go to state 49
    IF     shift, and go to state 50
    WHILE  shift, and go to state 51
    WRITE  shift, and go to state 52

    statement      go to state 53
    statementlist  go to state 138


State 132

   43 expr: IDENT '(' actualarglist ')' .

    $default  reduce using rule 43 (expr)


State 133

   59 nonemptyactualarglist: nonemptyactualarglist ',' . actualarg

    CONSTANT  shift, and go to state 77
    IDENT     shift, and go to state 78
    READ      shift, and go to state 79
    TRUE      shift, and go to state 80
    FALSE     shift, and go to state 81
    '-'       shift, and go to state 82
    '('       shift, and go to state 83
    '&'       shift, and go to state 84

    expr       go to state 115
    actualarg  go to state 139


State 134

   44 expr: IDENT '[' expr ']' .

    $default  reduce using rule 44 (expr)


State 135

   32 statement: IDENT '[' expr ']' '=' expr .
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    LOGOP  shift, and go to state 102
    RELOP  shift, and go to state 103
    '+'    shift, and go to state 104
    '-'    shift, and go to state 105
    '%'    shift, and go to state 106
    '*'    shift, and go to state 107
    '/'    shift, and go to state 108

    $default  reduce using rule 32 (statement)


State 136

   35 statement: IF '(' condition ')' statementlist ELSE . statementlist ENDIF

    IDENT  shift, and go to state 49
    IF     shift, and go to state 50
    WHILE  shift, and go to state 51
    WRITE  shift, and go to state 52

    statement      go to state 53
    statementlist  go to state 140


State 137

   34 statement: IF '(' condition ')' statementlist ENDIF .

    $default  reduce using rule 34 (statement)


State 138

   36 statement: WHILE '(' condition ')' DO statementlist . ENDWHILE
   38 statementlist: statementlist . statement ';'

    IDENT     shift, and go to state 49
    IF        shift, and go to state 50
    WHILE     shift, and go to state 51
    WRITE     shift, and go to state 52
    ENDWHILE  shift, and go to state 141

    statement  go to state 73


State 139

   59 nonemptyactualarglist: nonemptyactualarglist ',' actualarg .

    $default  reduce using rule 59 (nonemptyactualarglist)


State 140

   35 statement: IF '(' condition ')' statementlist ELSE statementlist . ENDIF
   38 statementlist: statementlist . statement ';'

    IDENT  shift, and go to state 49
    IF     shift, and go to state 50
    WHILE  shift, and go to state 51
    ENDIF  shift, and go to state 142
    WRITE  shift, and go to state 52

    statement  go to state 73


State 141

   36 statement: WHILE '(' condition ')' DO statementlist ENDWHILE .

    $default  reduce using rule 36 (statement)


State 142

   35 statement: IF '(' condition ')' statementlist ELSE statementlist ENDIF .

    $default  reduce using rule 35 (statement)
