Terminals unused in grammar

   PRINT


Grammar

    0 $accept: program $end

    1 program: declarations functiondefs mainfunction
    2        | statementlist END

    3 declarations: DECL declist ENDDECL

    4 declist: declist declaration ';'
    5        | declaration ';'

    6 declaration: vartype varlist
    7            | vartype IDENT '(' arglist ')'

    8 vartype: INTEGER
    9        | BOOLEAN

   10 varlist: varlist ',' variable
   11        | variable

   12 variable: IDENT
   13         | IDENT '[' CONSTANT ']'

   14 functiondefs: functiondefs function
   15             | function

   16 function: functionheader '{' Ldeclarations statementlist returnstmt '}'

   17 functionheader: vartype IDENT '(' arglist ')'

   18 returnstmt: RETURN expr

   19 mainfunction: INTEGER MAIN '(' ')' '{' Ldeclarations statementlist '}'

   20 arglist: arg ',' arglist
   21        | arg

   22 arg: vartype IDENT
   23    | vartype '&' IDENT

   24 Ldeclarations: DECL Ldecllist ENDDECL

   25 Ldecllist: Ldecllist Ldeclaration ';'
   26          | Ldeclaration ';'

   27 Ldeclaration: vartype Lvarlist

   28 Lvarlist: Lvarlist ',' Lvariable
   29         | Lvariable

   30 Lvariable: IDENT

   31 statement: IDENT '=' expr
   32          | IDENT '[' expr ']' '=' expr
   33          | WRITE '(' expr ')'
   34          | IF '(' condition ')' statementlist ENDIF
   35          | IF '(' condition ')' statementlist ELSE statementlist ENDIF
   36          | WHILE '(' condition ')' DO statementlist ENDWHILE

   37 statementlist: statement ';'
   38              | statementlist statement ';'

   39 condition: expr

   40 expr: CONSTANT
   41     | IDENT
   42     | '&' IDENT
   43     | IDENT '(' actualarglist ')'
   44     | IDENT '[' expr ']'
   45     | READ '(' ')'
   46     | expr '+' expr
   47     | expr '-' expr
   48     | expr '*' expr
   49     | expr '/' expr
   50     | expr '%' expr
   51     | '(' expr ')'
   52     | '-' expr
   53     | TRUE
   54     | FALSE
   55     | expr RELOP expr
   56     | expr LOGOP expr

   57 actualarglist: %empty
   58              | nonemptyactualarglist

   59 nonemptyactualarglist: nonemptyactualarglist ',' expr
   60                      | expr


Terminals, with rules where they appear

$end (0) 0
'%' (37) 50
'&' (38) 23 42
'(' (40) 7 17 19 33 34 35 36 43 45 51
')' (41) 7 17 19 33 34 35 36 43 45 51
'*' (42) 48
'+' (43) 46
',' (44) 10 20 28 59
'-' (45) 47 52
'/' (47) 49
';' (59) 4 5 25 26 37 38
'=' (61) 31 32
'[' (91) 13 32 44
']' (93) 13 32 44
'{' (123) 16 19
'}' (125) 16 19
error (256)
CONSTANT (258) 13 40
IDENT (259) 7 12 13 17 22 23 30 31 32 41 42 43 44
END (260) 2
MAIN (261) 19
INTEGER (262) 8 19
BOOLEAN (263) 9
DECL (264) 3 24
ENDDECL (265) 3 24
RETURN (266) 18
IF (267) 34 35
ELSE (268) 35
PRINT (269)
WHILE (270) 36
READ (271) 45
ENDIF (272) 34 35
WRITE (273) 33
TRUE (274) 53
FALSE (275) 54
DO (276) 36
ENDWHILE (277) 36
LOGOP (278) 56
RELOP (279) 55
UMINUS (280)


Nonterminals, with rules where they appear

$accept (41)
    on left: 0
program (42)
    on left: 1 2, on right: 0
declarations (43)
    on left: 3, on right: 1
declist (44)
    on left: 4 5, on right: 3 4
declaration (45)
    on left: 6 7, on right: 4 5
vartype (46)
    on left: 8 9, on right: 6 7 17 22 23 27
varlist (47)
    on left: 10 11, on right: 6 10
variable (48)
    on left: 12 13, on right: 10 11
functiondefs (49)
    on left: 14 15, on right: 1 14
function (50)
    on left: 16, on right: 14 15
functionheader (51)
    on left: 17, on right: 16
returnstmt (52)
    on left: 18, on right: 16
mainfunction (53)
    on left: 19, on right: 1
arglist (54)
    on left: 20 21, on right: 7 17 20
arg (55)
    on left: 22 23, on right: 20 21
Ldeclarations (56)
    on left: 24, on right: 16 19
Ldecllist (57)
    on left: 25 26, on right: 24 25
Ldeclaration (58)
    on left: 27, on right: 25 26
Lvarlist (59)
    on left: 28 29, on right: 27 28
Lvariable (60)
    on left: 30, on right: 28 29
statement (61)
    on left: 31 32 33 34 35 36, on right: 37 38
statementlist (62)
    on left: 37 38, on right: 2 16 19 34 35 36 38
condition (63)
    on left: 39, on right: 34 35 36
expr (64)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56, on right:
    18 31 32 33 39 44 46 47 48 49 50 51 52 55 56 59 60
actualarglist (65)
    on left: 57 58, on right: 43
nonemptyactualarglist (66)
    on left: 59 60, on right: 58 59


State 0

    0 $accept: . program $end

    IDENT  shift, and go to state 1
    DECL   shift, and go to state 2
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    WRITE  shift, and go to state 5

    program        go to state 6
    declarations   go to state 7
    statement      go to state 8
    statementlist  go to state 9


State 1

   31 statement: IDENT . '=' expr
   32          | IDENT . '[' expr ']' '=' expr

    '['  shift, and go to state 10
    '='  shift, and go to state 11


State 2

    3 declarations: DECL . declist ENDDECL

    INTEGER  shift, and go to state 12
    BOOLEAN  shift, and go to state 13

    declist      go to state 14
    declaration  go to state 15
    vartype      go to state 16


State 3

   34 statement: IF . '(' condition ')' statementlist ENDIF
   35          | IF . '(' condition ')' statementlist ELSE statementlist ENDIF

    '('  shift, and go to state 17


State 4

   36 statement: WHILE . '(' condition ')' DO statementlist ENDWHILE

    '('  shift, and go to state 18


State 5

   33 statement: WRITE . '(' expr ')'

    '('  shift, and go to state 19


State 6

    0 $accept: program . $end

    $end  shift, and go to state 20


State 7

    1 program: declarations . functiondefs mainfunction

    INTEGER  shift, and go to state 12
    BOOLEAN  shift, and go to state 13

    vartype         go to state 21
    functiondefs    go to state 22
    function        go to state 23
    functionheader  go to state 24


State 8

   37 statementlist: statement . ';'

    ';'  shift, and go to state 25


State 9

    2 program: statementlist . END
   38 statementlist: statementlist . statement ';'

    IDENT  shift, and go to state 1
    END    shift, and go to state 26
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    WRITE  shift, and go to state 5

    statement  go to state 27


State 10

   32 statement: IDENT '[' . expr ']' '=' expr

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    expr  go to state 36


State 11

   31 statement: IDENT '=' . expr

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    expr  go to state 37


State 12

    8 vartype: INTEGER .

    $default  reduce using rule 8 (vartype)


State 13

    9 vartype: BOOLEAN .

    $default  reduce using rule 9 (vartype)


State 14

    3 declarations: DECL declist . ENDDECL
    4 declist: declist . declaration ';'

    INTEGER  shift, and go to state 12
    BOOLEAN  shift, and go to state 13
    ENDDECL  shift, and go to state 38

    declaration  go to state 39
    vartype      go to state 16


State 15

    5 declist: declaration . ';'

    ';'  shift, and go to state 40


State 16

    6 declaration: vartype . varlist
    7            | vartype . IDENT '(' arglist ')'

    IDENT  shift, and go to state 41

    varlist   go to state 42
    variable  go to state 43


State 17

   34 statement: IF '(' . condition ')' statementlist ENDIF
   35          | IF '(' . condition ')' statementlist ELSE statementlist ENDIF

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    condition  go to state 44
    expr       go to state 45


State 18

   36 statement: WHILE '(' . condition ')' DO statementlist ENDWHILE

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    condition  go to state 46
    expr       go to state 45


State 19

   33 statement: WRITE '(' . expr ')'

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    expr  go to state 47


State 20

    0 $accept: program $end .

    $default  accept


State 21

   17 functionheader: vartype . IDENT '(' arglist ')'

    IDENT  shift, and go to state 48


State 22

    1 program: declarations functiondefs . mainfunction
   14 functiondefs: functiondefs . function

    INTEGER  shift, and go to state 49
    BOOLEAN  shift, and go to state 13

    vartype         go to state 21
    function        go to state 50
    functionheader  go to state 24
    mainfunction    go to state 51


State 23

   15 functiondefs: function .

    $default  reduce using rule 15 (functiondefs)


State 24

   16 function: functionheader . '{' Ldeclarations statementlist returnstmt '}'

    '{'  shift, and go to state 52


State 25

   37 statementlist: statement ';' .

    $default  reduce using rule 37 (statementlist)


State 26

    2 program: statementlist END .

    $default  reduce using rule 2 (program)


State 27

   38 statementlist: statementlist statement . ';'

    ';'  shift, and go to state 53


State 28

   40 expr: CONSTANT .

    $default  reduce using rule 40 (expr)


State 29

   41 expr: IDENT .
   43     | IDENT . '(' actualarglist ')'
   44     | IDENT . '[' expr ']'

    '('  shift, and go to state 54
    '['  shift, and go to state 55

    $default  reduce using rule 41 (expr)


State 30

   45 expr: READ . '(' ')'

    '('  shift, and go to state 56


State 31

   53 expr: TRUE .

    $default  reduce using rule 53 (expr)


State 32

   54 expr: FALSE .

    $default  reduce using rule 54 (expr)


State 33

   52 expr: '-' . expr

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    expr  go to state 57


State 34

   51 expr: '(' . expr ')'

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    expr  go to state 58


State 35

   42 expr: '&' . IDENT

    IDENT  shift, and go to state 59


State 36

   32 statement: IDENT '[' expr . ']' '=' expr
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    LOGOP  shift, and go to state 60
    RELOP  shift, and go to state 61
    '+'    shift, and go to state 62
    '-'    shift, and go to state 63
    '%'    shift, and go to state 64
    '*'    shift, and go to state 65
    '/'    shift, and go to state 66
    ']'    shift, and go to state 67


State 37

   31 statement: IDENT '=' expr .
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    LOGOP  shift, and go to state 60
    RELOP  shift, and go to state 61
    '+'    shift, and go to state 62
    '-'    shift, and go to state 63
    '%'    shift, and go to state 64
    '*'    shift, and go to state 65
    '/'    shift, and go to state 66

    $default  reduce using rule 31 (statement)


State 38

    3 declarations: DECL declist ENDDECL .

    $default  reduce using rule 3 (declarations)


State 39

    4 declist: declist declaration . ';'

    ';'  shift, and go to state 68


State 40

    5 declist: declaration ';' .

    $default  reduce using rule 5 (declist)


State 41

    7 declaration: vartype IDENT . '(' arglist ')'
   12 variable: IDENT .
   13         | IDENT . '[' CONSTANT ']'

    '('  shift, and go to state 69
    '['  shift, and go to state 70

    $default  reduce using rule 12 (variable)


State 42

    6 declaration: vartype varlist .
   10 varlist: varlist . ',' variable

    ','  shift, and go to state 71

    $default  reduce using rule 6 (declaration)


State 43

   11 varlist: variable .

    $default  reduce using rule 11 (varlist)


State 44

   34 statement: IF '(' condition . ')' statementlist ENDIF
   35          | IF '(' condition . ')' statementlist ELSE statementlist ENDIF

    ')'  shift, and go to state 72


State 45

   39 condition: expr .
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    LOGOP  shift, and go to state 60
    RELOP  shift, and go to state 61
    '+'    shift, and go to state 62
    '-'    shift, and go to state 63
    '%'    shift, and go to state 64
    '*'    shift, and go to state 65
    '/'    shift, and go to state 66

    $default  reduce using rule 39 (condition)


State 46

   36 statement: WHILE '(' condition . ')' DO statementlist ENDWHILE

    ')'  shift, and go to state 73


State 47

   33 statement: WRITE '(' expr . ')'
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    LOGOP  shift, and go to state 60
    RELOP  shift, and go to state 61
    '+'    shift, and go to state 62
    '-'    shift, and go to state 63
    '%'    shift, and go to state 64
    '*'    shift, and go to state 65
    '/'    shift, and go to state 66
    ')'    shift, and go to state 74


State 48

   17 functionheader: vartype IDENT . '(' arglist ')'

    '('  shift, and go to state 75


State 49

    8 vartype: INTEGER .
   19 mainfunction: INTEGER . MAIN '(' ')' '{' Ldeclarations statementlist '}'

    MAIN  shift, and go to state 76

    $default  reduce using rule 8 (vartype)


State 50

   14 functiondefs: functiondefs function .

    $default  reduce using rule 14 (functiondefs)


State 51

    1 program: declarations functiondefs mainfunction .

    $default  reduce using rule 1 (program)


State 52

   16 function: functionheader '{' . Ldeclarations statementlist returnstmt '}'

    DECL  shift, and go to state 77

    Ldeclarations  go to state 78


State 53

   38 statementlist: statementlist statement ';' .

    $default  reduce using rule 38 (statementlist)


State 54

   43 expr: IDENT '(' . actualarglist ')'

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    $default  reduce using rule 57 (actualarglist)

    expr                   go to state 79
    actualarglist          go to state 80
    nonemptyactualarglist  go to state 81


State 55

   44 expr: IDENT '[' . expr ']'

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    expr  go to state 82


State 56

   45 expr: READ '(' . ')'

    ')'  shift, and go to state 83


State 57

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   52     | '-' expr .
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    $default  reduce using rule 52 (expr)


State 58

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   51     | '(' expr . ')'
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    LOGOP  shift, and go to state 60
    RELOP  shift, and go to state 61
    '+'    shift, and go to state 62
    '-'    shift, and go to state 63
    '%'    shift, and go to state 64
    '*'    shift, and go to state 65
    '/'    shift, and go to state 66
    ')'    shift, and go to state 84


State 59

   42 expr: '&' IDENT .

    $default  reduce using rule 42 (expr)


State 60

   56 expr: expr LOGOP . expr

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    expr  go to state 85


State 61

   55 expr: expr RELOP . expr

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    expr  go to state 86


State 62

   46 expr: expr '+' . expr

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    expr  go to state 87


State 63

   47 expr: expr '-' . expr

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    expr  go to state 88


State 64

   50 expr: expr '%' . expr

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    expr  go to state 89


State 65

   48 expr: expr '*' . expr

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    expr  go to state 90


State 66

   49 expr: expr '/' . expr

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    expr  go to state 91


State 67

   32 statement: IDENT '[' expr ']' . '=' expr

    '='  shift, and go to state 92


State 68

    4 declist: declist declaration ';' .

    $default  reduce using rule 4 (declist)


State 69

    7 declaration: vartype IDENT '(' . arglist ')'

    INTEGER  shift, and go to state 12
    BOOLEAN  shift, and go to state 13

    vartype  go to state 93
    arglist  go to state 94
    arg      go to state 95


State 70

   13 variable: IDENT '[' . CONSTANT ']'

    CONSTANT  shift, and go to state 96


State 71

   10 varlist: varlist ',' . variable

    IDENT  shift, and go to state 97

    variable  go to state 98


State 72

   34 statement: IF '(' condition ')' . statementlist ENDIF
   35          | IF '(' condition ')' . statementlist ELSE statementlist ENDIF

    IDENT  shift, and go to state 1
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    WRITE  shift, and go to state 5

    statement      go to state 8
    statementlist  go to state 99


State 73

   36 statement: WHILE '(' condition ')' . DO statementlist ENDWHILE

    DO  shift, and go to state 100


State 74

   33 statement: WRITE '(' expr ')' .

    $default  reduce using rule 33 (statement)


State 75

   17 functionheader: vartype IDENT '(' . arglist ')'

    INTEGER  shift, and go to state 12
    BOOLEAN  shift, and go to state 13

    vartype  go to state 93
    arglist  go to state 101
    arg      go to state 95


State 76

   19 mainfunction: INTEGER MAIN . '(' ')' '{' Ldeclarations statementlist '}'

    '('  shift, and go to state 102


State 77

   24 Ldeclarations: DECL . Ldecllist ENDDECL

    INTEGER  shift, and go to state 12
    BOOLEAN  shift, and go to state 13

    vartype       go to state 103
    Ldecllist     go to state 104
    Ldeclaration  go to state 105


State 78

   16 function: functionheader '{' Ldeclarations . statementlist returnstmt '}'

    IDENT  shift, and go to state 1
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    WRITE  shift, and go to state 5

    statement      go to state 8
    statementlist  go to state 106


State 79

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr
   60 nonemptyactualarglist: expr .

    LOGOP  shift, and go to state 60
    RELOP  shift, and go to state 61
    '+'    shift, and go to state 62
    '-'    shift, and go to state 63
    '%'    shift, and go to state 64
    '*'    shift, and go to state 65
    '/'    shift, and go to state 66

    $default  reduce using rule 60 (nonemptyactualarglist)


State 80

   43 expr: IDENT '(' actualarglist . ')'

    ')'  shift, and go to state 107


State 81

   58 actualarglist: nonemptyactualarglist .
   59 nonemptyactualarglist: nonemptyactualarglist . ',' expr

    ','  shift, and go to state 108

    $default  reduce using rule 58 (actualarglist)


State 82

   44 expr: IDENT '[' expr . ']'
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    LOGOP  shift, and go to state 60
    RELOP  shift, and go to state 61
    '+'    shift, and go to state 62
    '-'    shift, and go to state 63
    '%'    shift, and go to state 64
    '*'    shift, and go to state 65
    '/'    shift, and go to state 66
    ']'    shift, and go to state 109


State 83

   45 expr: READ '(' ')' .

    $default  reduce using rule 45 (expr)


State 84

   51 expr: '(' expr ')' .

    $default  reduce using rule 51 (expr)


State 85

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr
   56     | expr LOGOP expr .

    RELOP  shift, and go to state 61
    '+'    shift, and go to state 62
    '-'    shift, and go to state 63
    '%'    shift, and go to state 64
    '*'    shift, and go to state 65
    '/'    shift, and go to state 66

    $default  reduce using rule 56 (expr)


State 86

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   55     | expr RELOP expr .
   56     | expr . LOGOP expr

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '%'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66

    $default  reduce using rule 55 (expr)


State 87

   46 expr: expr . '+' expr
   46     | expr '+' expr .
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    '%'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66

    $default  reduce using rule 46 (expr)


State 88

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   47     | expr '-' expr .
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    '%'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66

    $default  reduce using rule 47 (expr)


State 89

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   50     | expr '%' expr .
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    $default  reduce using rule 50 (expr)


State 90

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   48     | expr '*' expr .
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    $default  reduce using rule 48 (expr)


State 91

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   49     | expr '/' expr .
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    $default  reduce using rule 49 (expr)


State 92

   32 statement: IDENT '[' expr ']' '=' . expr

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    expr  go to state 110


State 93

   22 arg: vartype . IDENT
   23    | vartype . '&' IDENT

    IDENT  shift, and go to state 111
    '&'    shift, and go to state 112


State 94

    7 declaration: vartype IDENT '(' arglist . ')'

    ')'  shift, and go to state 113


State 95

   20 arglist: arg . ',' arglist
   21        | arg .

    ','  shift, and go to state 114

    $default  reduce using rule 21 (arglist)


State 96

   13 variable: IDENT '[' CONSTANT . ']'

    ']'  shift, and go to state 115


State 97

   12 variable: IDENT .
   13         | IDENT . '[' CONSTANT ']'

    '['  shift, and go to state 70

    $default  reduce using rule 12 (variable)


State 98

   10 varlist: varlist ',' variable .

    $default  reduce using rule 10 (varlist)


State 99

   34 statement: IF '(' condition ')' statementlist . ENDIF
   35          | IF '(' condition ')' statementlist . ELSE statementlist ENDIF
   38 statementlist: statementlist . statement ';'

    IDENT  shift, and go to state 1
    IF     shift, and go to state 3
    ELSE   shift, and go to state 116
    WHILE  shift, and go to state 4
    ENDIF  shift, and go to state 117
    WRITE  shift, and go to state 5

    statement  go to state 27


State 100

   36 statement: WHILE '(' condition ')' DO . statementlist ENDWHILE

    IDENT  shift, and go to state 1
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    WRITE  shift, and go to state 5

    statement      go to state 8
    statementlist  go to state 118


State 101

   17 functionheader: vartype IDENT '(' arglist . ')'

    ')'  shift, and go to state 119


State 102

   19 mainfunction: INTEGER MAIN '(' . ')' '{' Ldeclarations statementlist '}'

    ')'  shift, and go to state 120


State 103

   27 Ldeclaration: vartype . Lvarlist

    IDENT  shift, and go to state 121

    Lvarlist   go to state 122
    Lvariable  go to state 123


State 104

   24 Ldeclarations: DECL Ldecllist . ENDDECL
   25 Ldecllist: Ldecllist . Ldeclaration ';'

    INTEGER  shift, and go to state 12
    BOOLEAN  shift, and go to state 13
    ENDDECL  shift, and go to state 124

    vartype       go to state 103
    Ldeclaration  go to state 125


State 105

   26 Ldecllist: Ldeclaration . ';'

    ';'  shift, and go to state 126


State 106

   16 function: functionheader '{' Ldeclarations statementlist . returnstmt '}'
   38 statementlist: statementlist . statement ';'

    IDENT   shift, and go to state 1
    RETURN  shift, and go to state 127
    IF      shift, and go to state 3
    WHILE   shift, and go to state 4
    WRITE   shift, and go to state 5

    returnstmt  go to state 128
    statement   go to state 27


State 107

   43 expr: IDENT '(' actualarglist ')' .

    $default  reduce using rule 43 (expr)


State 108

   59 nonemptyactualarglist: nonemptyactualarglist ',' . expr

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    expr  go to state 129


State 109

   44 expr: IDENT '[' expr ']' .

    $default  reduce using rule 44 (expr)


State 110

   32 statement: IDENT '[' expr ']' '=' expr .
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    LOGOP  shift, and go to state 60
    RELOP  shift, and go to state 61
    '+'    shift, and go to state 62
    '-'    shift, and go to state 63
    '%'    shift, and go to state 64
    '*'    shift, and go to state 65
    '/'    shift, and go to state 66

    $default  reduce using rule 32 (statement)


State 111

   22 arg: vartype IDENT .

    $default  reduce using rule 22 (arg)


State 112

   23 arg: vartype '&' . IDENT

    IDENT  shift, and go to state 130


State 113

    7 declaration: vartype IDENT '(' arglist ')' .

    $default  reduce using rule 7 (declaration)


State 114

   20 arglist: arg ',' . arglist

    INTEGER  shift, and go to state 12
    BOOLEAN  shift, and go to state 13

    vartype  go to state 93
    arglist  go to state 131
    arg      go to state 95


State 115

   13 variable: IDENT '[' CONSTANT ']' .

    $default  reduce using rule 13 (variable)


State 116

   35 statement: IF '(' condition ')' statementlist ELSE . statementlist ENDIF

    IDENT  shift, and go to state 1
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    WRITE  shift, and go to state 5

    statement      go to state 8
    statementlist  go to state 132


State 117

   34 statement: IF '(' condition ')' statementlist ENDIF .

    $default  reduce using rule 34 (statement)


State 118

   36 statement: WHILE '(' condition ')' DO statementlist . ENDWHILE
   38 statementlist: statementlist . statement ';'

    IDENT     shift, and go to state 1
    IF        shift, and go to state 3
    WHILE     shift, and go to state 4
    WRITE     shift, and go to state 5
    ENDWHILE  shift, and go to state 133

    statement  go to state 27


State 119

   17 functionheader: vartype IDENT '(' arglist ')' .

    $default  reduce using rule 17 (functionheader)


State 120

   19 mainfunction: INTEGER MAIN '(' ')' . '{' Ldeclarations statementlist '}'

    '{'  shift, and go to state 134


State 121

   30 Lvariable: IDENT .

    $default  reduce using rule 30 (Lvariable)


State 122

   27 Ldeclaration: vartype Lvarlist .
   28 Lvarlist: Lvarlist . ',' Lvariable

    ','  shift, and go to state 135

    $default  reduce using rule 27 (Ldeclaration)


State 123

   29 Lvarlist: Lvariable .

    $default  reduce using rule 29 (Lvarlist)


State 124

   24 Ldeclarations: DECL Ldecllist ENDDECL .

    $default  reduce using rule 24 (Ldeclarations)


State 125

   25 Ldecllist: Ldecllist Ldeclaration . ';'

    ';'  shift, and go to state 136


State 126

   26 Ldecllist: Ldeclaration ';' .

    $default  reduce using rule 26 (Ldecllist)


State 127

   18 returnstmt: RETURN . expr

    CONSTANT  shift, and go to state 28
    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    TRUE      shift, and go to state 31
    FALSE     shift, and go to state 32
    '-'       shift, and go to state 33
    '('       shift, and go to state 34
    '&'       shift, and go to state 35

    expr  go to state 137


State 128

   16 function: functionheader '{' Ldeclarations statementlist returnstmt . '}'

    '}'  shift, and go to state 138


State 129

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr
   59 nonemptyactualarglist: nonemptyactualarglist ',' expr .

    LOGOP  shift, and go to state 60
    RELOP  shift, and go to state 61
    '+'    shift, and go to state 62
    '-'    shift, and go to state 63
    '%'    shift, and go to state 64
    '*'    shift, and go to state 65
    '/'    shift, and go to state 66

    $default  reduce using rule 59 (nonemptyactualarglist)


State 130

   23 arg: vartype '&' IDENT .

    $default  reduce using rule 23 (arg)


State 131

   20 arglist: arg ',' arglist .

    $default  reduce using rule 20 (arglist)


State 132

   35 statement: IF '(' condition ')' statementlist ELSE statementlist . ENDIF
   38 statementlist: statementlist . statement ';'

    IDENT  shift, and go to state 1
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    ENDIF  shift, and go to state 139
    WRITE  shift, and go to state 5

    statement  go to state 27


State 133

   36 statement: WHILE '(' condition ')' DO statementlist ENDWHILE .

    $default  reduce using rule 36 (statement)


State 134

   19 mainfunction: INTEGER MAIN '(' ')' '{' . Ldeclarations statementlist '}'

    DECL  shift, and go to state 77

    Ldeclarations  go to state 140


State 135

   28 Lvarlist: Lvarlist ',' . Lvariable

    IDENT  shift, and go to state 121

    Lvariable  go to state 141


State 136

   25 Ldecllist: Ldecllist Ldeclaration ';' .

    $default  reduce using rule 25 (Ldecllist)


State 137

   18 returnstmt: RETURN expr .
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '*' expr
   49     | expr . '/' expr
   50     | expr . '%' expr
   55     | expr . RELOP expr
   56     | expr . LOGOP expr

    LOGOP  shift, and go to state 60
    RELOP  shift, and go to state 61
    '+'    shift, and go to state 62
    '-'    shift, and go to state 63
    '%'    shift, and go to state 64
    '*'    shift, and go to state 65
    '/'    shift, and go to state 66

    $default  reduce using rule 18 (returnstmt)


State 138

   16 function: functionheader '{' Ldeclarations statementlist returnstmt '}' .

    $default  reduce using rule 16 (function)


State 139

   35 statement: IF '(' condition ')' statementlist ELSE statementlist ENDIF .

    $default  reduce using rule 35 (statement)


State 140

   19 mainfunction: INTEGER MAIN '(' ')' '{' Ldeclarations . statementlist '}'

    IDENT  shift, and go to state 1
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    WRITE  shift, and go to state 5

    statement      go to state 8
    statementlist  go to state 142


State 141

   28 Lvarlist: Lvarlist ',' Lvariable .

    $default  reduce using rule 28 (Lvarlist)


State 142

   19 mainfunction: INTEGER MAIN '(' ')' '{' Ldeclarations statementlist . '}'
   38 statementlist: statementlist . statement ';'

    IDENT  shift, and go to state 1
    IF     shift, and go to state 3
    WHILE  shift, and go to state 4
    WRITE  shift, and go to state 5
    '}'    shift, and go to state 143

    statement  go to state 27


State 143

   19 mainfunction: INTEGER MAIN '(' ')' '{' Ldeclarations statementlist '}' .

    $default  reduce using rule 19 (mainfunction)
