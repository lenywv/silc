START
JMP main
//entering x
sumton:
PUSH BP
MOV BP, SP
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV SP, R0
MOV R0, -3
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
MOV R1, 0
LT R0, R1
JZ R0, L0
MOV R0, 0
MOV R1, 1
MOV R2, BP
ADD R1, R2
MOV [R1], R0
JMP L1
L0:
MOV R0, -3
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
PUSH R0
MOV R0, -3
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
MOV R1, 1
SUB R0, R1
PUSH R0
PUSH R0
CALL sumton
POP R1
MOV R2, -1
MOV R3, SP
ADD R2, R3
MOV SP, R2
POP R0
ADD R0, R1
MOV R1, 1
MOV R2, BP
ADD R1, R2
MOV [R1], R0
L1:
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
MOV R1, BP
MOV R2, -2
ADD R1, R2
MOV [R1], R0
MOV SP, BP
POP BP
RET
main:
PUSH BP
MOV BP, SP
MOV R0, 2
MOV R1, BP
ADD R0, R1
MOV SP, R0
MOV R0, 7
MOV R1, 1
MOV R2, BP
ADD R1, R2
MOV [R1], R0
MOV R0, 5
MOV [0], R0
MOV R0, 1
PUSH R0
PUSH R0
CALL sumton
POP R0
MOV R1, -1
MOV R2, SP
ADD R1, R2
MOV SP, R1
OUT R0
MOV R0, 2
PUSH R0
PUSH R0
CALL sumton
POP R0
MOV R1, -1
MOV R2, SP
ADD R1, R2
MOV SP, R1
OUT R0
MOV R0, 3
PUSH R0
PUSH R0
CALL sumton
POP R0
MOV R1, -1
MOV R2, SP
ADD R1, R2
MOV SP, R1
OUT R0
MOV R0, [0]
PUSH R0
PUSH R0
CALL sumton
POP R0
MOV R1, -1
MOV R2, SP
ADD R1, R2
MOV SP, R1
OUT R0
MOV R0, 1
MOV R1, BP
ADD R0, R1
MOV R0, [R0]
PUSH R0
PUSH R0
CALL sumton
POP R0
MOV R1, -1
MOV R2, SP
ADD R1, R2
MOV SP, R1
OUT R0
MOV SP, BP
POP BP
HALT
